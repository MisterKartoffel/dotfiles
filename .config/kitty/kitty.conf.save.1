# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

#: Fonts {{{

#: Font selection
	font_family      JetBrainsMono Nerd Font
	bold_font        auto
	italic_font      auto
	bold_italic_font auto


#: Font size (in pts)
	font_size 13.0


#: Multi-character ligature handling
	disable_ligatures never

#: }}}



#: Cursor customization {{{

#: Default cursor color
	cursor none


#: Color of text under cursor, ignored if cursor color = none
	cursor_text_color #111111


#: Shape of cursor between block, beam and underline
	cursor_shape block


#: Self-explanatory, positive values = seconds, zero = disabled, negative = system default
	cursor_blink_interval -1


#: Stop blinking after N seconds of inactivity, zero = never
	cursor_stop_blinking_after 15.0

#: }}}



#: Scrollback {{{

#: Number of lines in history for scrolling back
	scrollback_lines 100


#: Scroll amount multiplier on mouse wheel
	wheel_scroll_multiplier 5.0

#: }}}



Mouse {{{

#: Hide cursor after N seconds of inactivity, negative = immediately
	mouse_hide_wait -1


#: Color and style for highlighting URLs on mouse-over
	url_color #0087bd
	url_style curly


#: Modifier key for opening URLs with the mouse
	open_url_modifiers kitty_mod


#: URL opening handler
	open_url_with default


#: Prefixes for detecting URL under mouse cursor
	url_prefixes http https file ftp


#: Whether to detect URLs under mouse cursor
	detect_urls yes


#: Copy to clipboard on mouse text selection
	copy_on_select no


#: Whether to remove spaces at the end of lines when copying to clipboard
	strip_trailing_spaces never


#: Modifier keys for rectangular selection with the mouse
	rectangle_select_modifiers ctrl+alt


#: Modifier to override mouse selection
	terminal_select_modifiers shift


#: Characters considered part of a word when double clicking
	select_by_word_characters @-./_~?&=%+#


#: Interval (in seconds) between successive clicks to detect multiple clicks, negative = default
	click_interval -1.0


#: Use mouse to set active window
	focus_follows_mouse no


#: Mouse shape when terminal program grabs it
	pointer_shape_when_grabbed arrow


#: Mouse pointer default shape
	default_pointer_shape beam


#: Mouse pointer shape when dragging across text
	pointer_shape_when_dragging beam

#: }}}



#: Performance tuning {{{


#: Delay (in ms) between screen updates
	repaint_delay 16


#: Delay (in ms) before input from in-terminal program is processed
	input_delay 3


#: Sync screen updates to monitor refresh rate
	sync_to_monitor yes

#: }}}

#: Terminal bell {{{

#: Enable audio bell, duh
	enable_audio_bell yes


#: Duration for visual bell indication, zero = disabled
	visual_bell_duration 0.0


#: Request window attention on bell
	window_alert_on_bell yes


#: Show bell symbol on tab if window is not currently focused
	bell_on_tab yes


#: Program to run when bell occurs
	command_on_bell none

#: }}}



#: Window layout {{{


#: Remember window size, if not true set window size to specified width/height
	remember_window_size  yes
	initial_window_width  640
	initial_window_height 400


#: Enabled window layouts.
	enabled_layouts splits

	map ctrl+e     launch --location=vsplit --cwd=current
	map ctrl+o     launch --location=hsplit --cwd=current
	map ctrl+enter launch --location=hsplit --cwd=current

	map ctrl+h      previous_window
	map ctrl+l      next_window


#: Step size (in cells) when resizing windows
	window_resize_step_cells 2
	window_resize_step_lines 2


#: Width of window borders
	window_border_width 0.5pt


#: Draw minimal borders between windows
	draw_minimal_borders yes


#: Window margin (in pts)
	window_margin_width 0


#: Window margin (in pts) when only a single window is visible, negative = window_margin_width
	single_window_margin_width -1


#: Window padding (in pts)
	window_padding_width 0


#: How to place cell area when window size is not a multiple of cell size
	placement_strategy center


#: Active window border color
	active_border_color #00ff00


#: Inactive window border color
	inactive_border_color #cccccc


#: Border color when bell occurred
	bell_border_color #ff5a00


#: How much to fade inactive window text
	inactive_text_alpha 1.0


#: Hide window decorations (title-bar and borders)
	hide_window_decorations no


#: Time (in seconds) before redrawing screen on resize
	resize_debounce_time 0.1


#: How to draw a window during resize
	resize_draw_strategy static


#: Resize OS window in cell-sized steps instead of pixel-accurately
	resize_in_steps no


#: Ask for confirmation when closing OS window or tab that has at least N kitty windows on it
	confirm_os_window_close 0

#: }}}



#: Tab bar {{{

#: Where to show tab bar
	tab_bar_edge bottom


#: Side margin (in pts) for tab bar
	tab_bar_margin_width 0.0


#: Self-explanatory
	tab_bar_style fade


#: Minimum number of tabs before showing tab bar
	tab_bar_min_tabs 2


#: Where to go when current tab is closed
	tab_switch_strategy previous


#: How tab fades when using tab_bar_style fade
	tab_fade 0.25 0.5 0.75 1


#: What to show when tab in background has activity
	tab_activity_symbol none


#: Tab title render template
	tab_title_template "{title}"


#: Tab title render template for active tabs, defaults to tab_title_template
	active_tab_title_template none


#: Tab bar colors and styles
	active_tab_foreground   #000
	active_tab_background   #eee
	active_tab_font_style   bold-italic
	inactive_tab_foreground #444
	inactive_tab_background #999
	inactive_tab_font_style normal


#: Tab bar background color, defaults to terminal color
	tab_bar_background none

#: }}}



#: Color scheme {{{

#: Foreground and background colors
	foreground #e6e6dc
	background #002635


#: Background opacity
	background_opacity 1.0


#: Path to PNG background image
	background_image none


#: Whether to tile or scale background image
	background_image_layout tiled


#: Whether to use linear interpolation if background image is scaled
	background_image_linear no


#: Dynamically changing background_opacity
	dynamic_background_opacity no


#: How much to tint background image by background color
	background_tint 0.0


#: How much to dim text with DIM/FAINT attributes
	dim_opacity 0.75


#: Foreground and background color for mouse-selected text
	selection_foreground #000000
	selection_background #fffacd

#: Temrinal colors
#: black
	color0	#00384d
	color8	#517f8d

#: red
	color1	#c43061
	color9	#ff5a67

#: green
	color2	#7fc06e
	color10	#9cf087

#: yellow
	color3	#f08e48
	color11	#ffcc1b

#: blue
	color4	#1c8db2
	color12	#7eb2dd

#: magenta
	color5	#c694ff
	color13	#fb94ff

#: cyan
	color6	#00cccc
	color14	#00ffff

#: white
	color7	#77929e
	color15	#b7cff9


#: Type 1 mark color
	mark1_foreground black


#: Type 1 (light steel blue) mark color
	mark1_background #98d3cb


#: Type 2 mark color
	mark2_foreground black


#: Type 2 (beige) mark color
	mark2_background #f2dcd3


#: Type 3 mark color
	mark3_background black


#: Type 3 (violet) mark color
	mark3_background #f274bc

#: }}}



#: Advanced {{{

#: Shell program to use, . = user default
	shell .


#: Console editor, . = user ENV VISUAL and EDITOR
	editor .


#: Whether to close on child process exit
	close_on_child_death no


#: Allow other programs to control kitty
	allow_remote_control no


#: Listen to specified unix/tcp socket for remote control connections
	listen_on none


#: Time (in hours) to check for kitty updates, zero = disabled
	update_check_interval 24


#: Path to session file for all kitty instances
	startup_session none


#: Allow programs in kitty to r/w from clipboard
	clipboard_control write-clipboard write-primary


#: Process hyperlink escape sequences
	allow_hyperlinks yes


#: TERM env variable value
	term xterm-kitty

#: }}}



#: OS specific tweaks {{{

#: Choose between Wayland and X11 backends
	linux_display_server auto

#: }}}



#: Keyboard shortcuts {{{


#: Value of kitty_mod for all default shortcuts
	kitty_mod ctrl+shift


#: Remove all shortcut definitions up to this point
	clear_all_shortcuts no


#: Clipboard {{{

#: Clipboard shortcuts
	map ctrl+c copy_or_interrupt
	map kitty_mod+v  paste_from_clipboard
	map shift+insert paste_from_selection

#: }}}



#: Tab management {{{

map kitty_mod+right next_tab
map kitty_mod+left  previous_tab
map kitty_mod+t     new_tab
map kitty_mod+q     close_tab
map kitty_mod+.     move_tab_forward
map kitty_mod+,     move_tab_backward
map kitty_mod+alt+t set_tab_title

#: You can also create shortcuts to go to specific tabs, with 1 being
#: the first tab, 2 the second tab and -1 being the previously active
#: tab, and any number larger than the last tab being the last tab::

#:     map ctrl+alt+1 goto_tab 1
#:     map ctrl+alt+2 goto_tab 2

#: Just as with new_window above, you can also pass the name of
#: arbitrary commands to run when using new_tab and use
#: new_tab_with_cwd. Finally, if you want the new tab to open next to
#: the current tab rather than at the end of the tabs list, use::

#:     map ctrl+t new_tab !neighbor [optional cmd to run]
#: }}}

#: Layout management {{{

map kitty_mod+l next_layout

#: You can also create shortcuts to switch to specific layouts::

map kitty_mod+t goto_layout tall
map kitty_mod+s goto_layout stack

#: Similarly, to switch back to the previous layout::

#:    map ctrl+alt+p last_used_layout
#: }}}

#: Font sizes {{{

#: You can change the font size for all top-level kitty OS windows at
#: a time or only the current one.

map kitty_mod+equal     change_font_size all +2.0
map kitty_mod+minus     change_font_size all -2.0
map kitty_mod+backspace change_font_size all 0

#: To setup shortcuts for specific font sizes::

#:     map kitty_mod+f6 change_font_size all 10.0

#: To setup shortcuts to change only the current OS window's font
#: size::

#:     map kitty_mod+f6 change_font_size current 10.0
#: }}}

#: Select and act on visible text {{{

#: Use the hints kitten to select text and either pass it to an
#: external program or insert it into the terminal or copy it to the
#: clipboard.

map kitty_mod+i kitten hints

#: Open a currently visible URL using the keyboard. The program used
#: to open the URL is specified in open_url_with.

map kitty_mod+p>f kitten hints --type path --program -

#: Select a path/filename and insert it into the terminal. Useful, for
#: instance to run git commands on a filename output from a previous
#: git command.

map kitty_mod+p>shift+f kitten hints --type path

#: Select a path/filename and open it with the default open program.

map kitty_mod+p>l kitten hints --type line --program -

#: Select a line of text and insert it into the terminal. Use for the
#: output of things like: ls -1

map kitty_mod+p>w kitten hints --type word --program -

#: Select words and insert into terminal.

map kitty_mod+p>h kitten hints --type hash --program -

#: Select something that looks like a hash and insert it into the
#: terminal. Useful with git, which uses sha1 hashes to identify
#: commits

map kitty_mod+p>n kitten hints --type linenum

#: Select something that looks like filename:linenum and open it in
#: vim at the specified line number.

map kitty_mod+p>y kitten hints --type hyperlink

#: Select a hyperlink (i.e. a URL that has been marked as such by the
#: terminal program, for example, by ls --hyperlink=auto).


#: The hints kitten has many more modes of operation that you can map
#: to different shortcuts. For a full description see kittens/hints.
#: }}}

# map ctrl+x kitten zoom_window.py

include snazzy.conf

#: Custom kitten to zoom a window

#: Miscellaneous {{{

map kitty_mod+f11    toggle_fullscreen
map kitty_mod+f10    toggle_maximized
map kitty_mod+u      kitten unicode_input
map kitty_mod+f2     edit_config_file
map kitty_mod+escape kitty_shell window

#: Open the kitty shell in a new window/tab/overlay/os_window to
#: control kitty using commands.

map kitty_mod+a>m    set_background_opacity +0.1
map kitty_mod+a>l    set_background_opacity -0.1
map kitty_mod+a>1    set_background_opacity 1
map kitty_mod+a>d    set_background_opacity default
map kitty_mod+delete clear_terminal reset active

#: You can create shortcuts to clear/reset the terminal. For example::

#:     # Reset the terminal
#:     map kitty_mod+f9 clear_terminal reset active
#:     # Clear the terminal screen by erasing all contents
#:     map kitty_mod+f10 clear_terminal clear active
#:     # Clear the terminal scrollback by erasing it
#:     map kitty_mod+f11 clear_terminal scrollback active
#:     # Scroll the contents of the screen into the scrollback
#:     map kitty_mod+f12 clear_terminal scroll active

#: If you want to operate on all windows instead of just the current
#: one, use all instead of active.

#: It is also possible to remap Ctrl+L to both scroll the current
#: screen contents into the scrollback buffer and clear the screen,
#: instead of just clearing the screen::

#:     map ctrl+l combine : clear_terminal scroll active : send_text normal,application \x0c


#: You can tell kitty to send arbitrary (UTF-8) encoded text to the
#: client program when pressing specified shortcut keys. For example::

#:     map ctrl+alt+a send_text all Special text

#: This will send "Special text" when you press the ctrl+alt+a key
#: combination.  The text to be sent is a python string literal so you
#: can use escapes like \x1b to send control codes or \u21fb to send
#: unicode characters (or you can just input the unicode characters
#: directly as UTF-8 text). The first argument to send_text is the
#: keyboard modes in which to activate the shortcut. The possible
#: values are normal or application or kitty or a comma separated
#: combination of them.  The special keyword all means all modes. The
#: modes normal and application refer to the DECCKM cursor key mode
#: for terminals, and kitty refers to the special kitty extended
#: keyboard protocol.

#: Another example, that outputs a word and then moves the cursor to
#: the start of the line (same as pressing the Home key)::

#:     map ctrl+alt+a send_text normal Word\x1b[H
#:     map ctrl+alt+a send_text application Word\x1bOH

#: }}}

# }}}
